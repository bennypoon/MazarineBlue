/*
 * Copyright (c) 2016 Alex de Kruijff <alex.de.kruijff@MazarineBlue.org>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.mazarineblue.standalone.screens.main;

import java.io.File;
import java.net.URL;
import javax.swing.JDialog;
import org.mazarineblue.standalone.screens.about.AboutDialog;
import org.mazarineblue.standalone.screens.about.AboutModel;
import org.mazarineblue.standalone.screens.about.ImageFetcher;
import org.mazarineblue.standalone.util.ExceptionReporter;
import org.mazarineblue.standalone.util.GraphicalMessage;
import org.mazarineblue.standalone.util.GraphicalTextImageFetcher;
import org.mazarineblue.standalone.util.LoggerExceptionReporter;
import org.mazarineblue.standalone.util.URLImageFetcher;

/**
 * A {@code MainFrame} is a {@code JFrame} that forms the view and control on
 * the main form, that combines with a model ({@link MainModel}) to perform
 * actions when the user interacts with it.
 *
 * @author Alex de Kruijff <alex.de.kruijff@MazarineBlue.org>
 */
public class MainFrame
        extends javax.swing.JFrame {

    private static final ExceptionReporter LOGGER = new LoggerExceptionReporter();
    private static final long serialVersionUID = 1L;

    private final MainModel model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton executeButton;
    private javax.swing.JComboBox fileComboBox;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JComboBox sheetComboBox;
    private javax.swing.JLabel sheetLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Constructs a main {@code JFrame} and maps it to the specified
     * {@code MainModel}.
     *
     * @param model the main model that perform user based actions.
     */
    public MainFrame(MainModel model) {
        this.model = model;
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileLabel = new javax.swing.JLabel();
        selectFileButton = new javax.swing.JButton();
        executeButton = new javax.swing.JButton();
        fileComboBox = new javax.swing.JComboBox();
        sheetComboBox = new javax.swing.JComboBox();
        sheetLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MazarineBlue");
        setMinimumSize(new java.awt.Dimension(400, 160));
        setName("mainFrame"); // NOI18N

        fileLabel.setDisplayedMnemonic('f');
        fileLabel.setLabelFor(fileComboBox);
        fileLabel.setText("File");

        selectFileButton.setAction(model.getSelectFileAction());
        selectFileButton.setMnemonic('s');
        selectFileButton.setText("Select file");
        selectFileButton.setName("selectFileButton"); // NOI18N

        executeButton.setAction(model.getExecuteAction());
        executeButton.setMnemonic('x');
        executeButton.setText("Execute");
        executeButton.setName("executeButton"); // NOI18N

        fileComboBox.setModel(model.getFileModel());

        sheetComboBox.setModel(model.getSheetModel());

        sheetLabel.setDisplayedMnemonic('h');
        sheetLabel.setLabelFor(sheetComboBox);
        sheetLabel.setText("Sheet");

        fileMenu.setText("File");
        fileMenu.setActionCommand(selectFileButton.getActionCommand());
        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");
        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sheetLabel)
                    .addComponent(fileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sheetComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(executeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileComboBox, 0, 200, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectFileButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(selectFileButton)
                    .addComponent(fileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sheetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sheetLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(executeButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        AboutModel m = new AboutModel(LOGGER);
        ImageFetcher fetcher = getLogoFetcher(new File("logo.png"));
        openDialog(m, fetcher);
    }

    private ImageFetcher getLogoFetcher(File file) {
        String path = file.getPath();
        URL url = getClass().getClassLoader().getResource(path);
        GraphicalTextImageFetcher backup = new GraphicalTextImageFetcher(150, 150);
        backup.addGraphicalMessage(new GraphicalMessage("Image IO", 25, 65));
        backup.addGraphicalMessage(new GraphicalMessage("Error", 25, 90));
        return new URLImageFetcher(url, backup, LOGGER);
    }

    private void openDialog(AboutModel model, ImageFetcher logoFetcher) {
        JDialog dialog = new AboutDialog(this, model, logoFetcher);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed
}
